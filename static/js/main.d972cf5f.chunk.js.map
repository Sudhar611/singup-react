{"version":3,"sources":["components/Content.jsx","components/SignupForm.jsx","components/App.jsx","index.js"],"names":["Content","className","SignupForm","React","useState","FirstName","LastName","email","password","validate","setValidate","names","setclassname","handlechange","event","target","name","value","console","log","prev","test","type","onChange","placeholder","autoComplete","src","alt","onClick","e","preventDefault","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d972cf5f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Content(){\r\n    return (\r\n        <div className=\"content\">\r\n            <h1>Learn to code by watching others</h1>\r\n            <p>See how experienced developers solve problems in real-time. Watching scripted tutorials is great, but understanding how developers think is invaluable. </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","import React from \"react\";\r\n\r\nfunction SignupForm(){\r\n\r\n    const [validate, setValidate]=React.useState({\r\n        FirstName: false,\r\n        LastName: false,\r\n        email: false,\r\n        password: false\r\n    });\r\n\r\n    const [names, setclassname]=React.useState({\r\n        FirstName: \"\",\r\n        LastName: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    function handlechange(event){\r\n        const {name,value}=event.target;\r\n        console.log(value)\r\n        if (name===\"FirstName\"){\r\n            if(value!=\" \"){\r\n                setValidate((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    FirstName:!(prev.FirstName)\r\n                };\r\n            });\r\n            }\r\n        }else if(name===\"LastName\"){\r\n            if(value!=\" \"){\r\n                setValidate((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    LastName:!(prev.LastName)\r\n                };\r\n            });\r\n            }\r\n        }else if(name===\"email\"){\r\n            if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)){\r\n                setValidate((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    email:!(prev.email)\r\n                };\r\n            });\r\n            }\r\n        }else if(name===\"password\"){\r\n            if(value!=\" \"){\r\n                setValidate((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    password:!(prev.password)\r\n                };\r\n            });\r\n            }\r\n        }\r\n    }\r\n\r\n    function handlesubmit(e){\r\n        if(validate.FirstName===false){\r\n            setclassname((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    FirstName:\"fname\"\r\n                }\r\n            })\r\n        }else{\r\n            setclassname((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    FirstName:\"\"\r\n                }\r\n            })\r\n        }\r\n\r\n        if(validate.LastName===false){\r\n            setclassname((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    LastName:\"lname\"\r\n                }\r\n            })\r\n        }else{\r\n            setclassname((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    LastName:\"\"\r\n                }\r\n            })\r\n        }\r\n\r\n        if(validate.email===false){\r\n            setclassname((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    email:\"email\"\r\n                }\r\n            })\r\n        }else{\r\n            setclassname((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    email:\"\"\r\n                }\r\n            })\r\n        }\r\n\r\n        if(validate.password===false){\r\n            setclassname((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    password:\"password\"\r\n                }\r\n            })\r\n        }else{\r\n            setclassname((prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    password:\"\"\r\n                }\r\n            })\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"signupform\">\r\n        <div className=\"singupcontainer\">\r\n        <p className=\"try\">Try it free 7 days then $20/mo. thereafter</p>\r\n            <form>\r\n            <div className=\"formcontrol\">\r\n                <input type=\"text\" onChange={handlechange} name=\"FirstName\" placeholder=\"First Name\" autoComplete=\"off\"/>\r\n                <img src=\"../images/icon-error.svg\" alt=\"erroricon\" className={\"erroricon adjust \"+names.FirstName} />\r\n                <p className={\"errormsg \"+names.FirstName}>First Name cannot be empty</p>\r\n            </div>\r\n            <div className=\"formcontrol\">\r\n                <input type=\"text\" onChange={handlechange} name=\"LastName\" placeholder=\"Last Name\" autoComplete=\"off\"/>\r\n                <img src=\"../images/icon-error.svg\" alt=\"erroricon\" className={\"erroricon \"+names.LastName} />\r\n                <p className={\"errormsg \"+names.LastName}>Last Name cannot be empty</p>\r\n            </div>\r\n            <div className=\"formcontrol\">\r\n                <input type=\"email\" onChange={handlechange} name=\"email\" placeholder=\"Email Address\" autoComplete=\"off\"/>\r\n                <img src=\"../images/icon-error.svg\" alt=\"erroricon\" className={\"erroricon \"+names.email} />\r\n                <p className={\"errormsg \"+names.email}>Looks like this is not an email</p>\r\n            </div>\r\n            <div className=\"formcontrol\">\r\n                <input type=\"password\" onChange={handlechange} name=\"password\" placeholder=\"Password\" autoComplete=\"off\"/>\r\n                <img src=\"../images/icon-error.svg\" alt=\"erroricon\" className={\"erroricon \"+names.password} />\r\n                <p className={\"errormsg \"+names.password}>Password cannot be empty</p>\r\n            </div>\r\n            <div className=\"formcontrol submit\">\r\n                <input type=\"submit\" onClick={handlesubmit}  name=\"submit\" value=\"Claim your free trial \"/>\r\n                 <p>By clicking the button, you are agreeing to our <span className=\"terms\">Terms and Services</span></p>\r\n            </div>       \r\n            </form>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupForm;","import React, { Component } from \"react\";\r\nimport Content from \"./Content.jsx\";\r\nimport SignupForm from \"./SignupForm.jsx\";\r\n\r\nfunction App(){\r\n    return (\r\n        <div className=\"signup\">\r\n            <Content />\r\n            <SignupForm />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\"\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App.jsx\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}